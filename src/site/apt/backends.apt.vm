Backends

  cedarsoft Serialization provides several base classes that can be extended.
  When you prefer to use your own serializing technology, you can create your own backend.

* Recommendation

  For XML based serialization, Stax or Stax Mate is recommended.

* Stax

  This backend is based on the new - and very fast and comfortable - XML api added
  to JDK 1.6 (JSR-173).

  No external libraries are necessary to use the Stax backend. But it is suggested to add {{{http://woodstox.codehaus.org}Woodstox}}
  or another Stax aware XML processor to improve the performance.

  Serializers should extend {{{./xref/com/cedarsoft/serialization/stax/AbstractStaxSerializer.html}<AbstractStaxSerializer>}}.

**  Maven dependency:

---
<dependency>
  <groupId>com.cedarsoft.serialization</groupId>
  <artifactId>stax</artifactId>
  <version>${currentStableVersion}</version>
</dependency>
---

  Optional Woodstox dependency:

---
<dependency>
  <groupId>org.codehaus.woodstox</groupId>
  <artifactId>woodstox-core-asl</artifactId>
  <version>4.0.6</version>
</dependency>
---

* Stax Mate

  Stax Mate is a small extension to Stax that offers an improved API to serialize XML. The code looks a bit cleaner and it
  is saving you a few key strokes.

  Since it is based on Stax you get the same performance.

  Serializers should extend {{{./xref/com/cedarsoft/serialization/stax/AbstractStaxMateSerializer.html}<AbstractStaxMateSerializer>}}.

**  Maven dependency:

---
<dependency>
  <groupId>com.cedarsoft.serialization</groupId>
  <artifactId>stax-mate</artifactId>
  <version>${currentStableVersion}</version>
</dependency>
---

  Optional Woodstox dependency:

---
<dependency>
  <groupId>org.codehaus.woodstox</groupId>
  <artifactId>woodstox-core-asl</artifactId>
  <version>4.0.6</version>
</dependency>
---

* JDom

  If you prefer to work with a DOM based API, the JDom based backend can be used.
  But be aware; JDom is  significantly slower than Stax (around factor 100).

  Serializers should extend {{{./xref/com/cedarsoft/serialization/jdom/AbstractJDomSerializer.html}<AbstractJDomSerializer>}}.

**  Maven dependency:

---
<dependency>
  <groupId>com.cedarsoft.serialization</groupId>
  <artifactId>jdom</artifactId>
  <version>${currentStableVersion}</version>
</dependency>
---


* Custom Backend

  Custom backends can easily be created. It only takes a few lines of code. There exists an abstract base class
  for XML based serialization ({{{./xref/com/cedarsoft/serialization/AbstractXmlSerializer.html}<AbstractXmlSerializer>}}).

  Custom backend implementations should extend {{{./xref/com/cedarsoft/serialization/AbstractSerializer.html}AbstractSerializer}}.

---
<dependency>
  <groupId>com.cedarsoft.serialization</groupId>
  <artifactId>serialization</artifactId>
  <version>${currentStableVersion}</version>
</dependency>
---
